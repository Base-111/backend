version: "3.8"

services:
  postgres:
    container_name: postgres
    image: postgres:14.8-alpine3.18
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: ${DB_NAME:?error}
      POSTGRES_USER: ${DB_USERNAME:?error}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?error}
#    expose:
#      - "5432"
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  keycloak_web:
    image: quay.io/keycloak/keycloak:23.0.7
    container_name: keycloak_web
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakdb:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password

      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    depends_on:
      - keycloakdb
    ports:
      - "8080:8080"

  keycloakdb:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password

  redis:
    container_name: redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: on-failure
    environment:
      REDIS_PORT: 6379
      REDIS_USERNAME: redis_user
      REDIS_PASSWORD: redis_password
      REDIS_DB: 0
    volumes:
      - redis-data:/data
    command: [
      "redis-server",
      "--port","6379",
      "--bind","0.0.0.0",
      "--protected-mode","yes",
      # пароль для default — теперь инстанс считается защищённым
      "--user","default","on",">DEFAULT_STRONG_PW","~*","&*","+@all",
      # ваш именованный пользователь
      "--user","redis_user","on",">redis_password","~*","&*","+@all",
      "--save","60","1",
      "--loglevel","warning"
    ]

  webui:
    image: ghcr.io/open-webui/open-webui:git-09a81eb
    ports:
      - "8080:8080"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
    volumes:
      - ./open-webui:/app/backend/data
    depends_on:
      - ollama

  ollama:
    image: docker.io/ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - .:/code
      - ./ollama/ollama:/root/.ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always
    environment:
      - OLLAMA_KEEP_ALIVE=24h

#  api:
#    container_name: api_${TAG}
#    build:
#      context: .
#    depends_on:
#      - postgres
#    environment:
#      - API_PORT=${API_PORT}
#      - DB_HOST=${DB_HOST}
#      - DB_PORT=${DB_PORT}
#      - DB_USERNAME=${DB_USERNAME}
#      - DB_NAME=${DB_NAME}
#      - DB_SSL_MODE=${DB_SSL_MODE}
#      - DB_PASSWORD=${DB_PASSWORD}
#    ports:
#      - "${API_PORT}:${API_PORT}"
#    restart: always
#    deploy:
#      resources:
#        limits:
#          cpus: '2'
#          memory: 1G

volumes:
  postgres_data:
  redis-data: